[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bddriver"
version = "1.0.0"
description = "零配置百度网盘授权驱动 - 开箱即用的百度网盘 SDK"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Zhang Zao", email = "zzchun12826@gmail.com"}
]
keywords = ["baidu", "netdisk", "sdk", "oauth", "wxpusher", "authorization", "file-sharing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Filesystems",
]
requires-python = ">=3.7"
dependencies = [
    "requests>=2.25.0",
    "cryptography>=3.4.0",
]

[project.optional-dependencies]
async = ["aiohttp>=3.8.0"]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "black>=21.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
bddriver = "bddriver.cli:main"

[project.urls]
Homepage = "https://github.com/your-repo/bddriver-api"
Documentation = "https://github.com/your-repo/bddriver-api#readme"
Repository = "https://github.com/your-repo/bddriver-api"
Issues = "https://github.com/your-repo/bddriver-api/issues"

[tool.hatch.build.targets.wheel]
packages = ["bddriver"]

[tool.hatch.build.targets.sdist]
include = [
    "/bddriver",
    "/examples",
    "/tests",
    "/lib",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bddriver"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openapi_client.*",
    "pyngrok.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--maxfail=10",
    "--durations=10",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "auth: marks tests as authentication related",
    "cli: marks tests as CLI related",
    "fileops: marks tests as file operations related",
    "wxpusher: marks tests as WxPusher related",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["bddriver"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_vendor/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
